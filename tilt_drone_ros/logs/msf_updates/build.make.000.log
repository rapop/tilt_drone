[35m[1mScanning dependencies of target pose_distorter[0m
[  5%] [32mBuilding CXX object CMakeFiles/pose_distorter.dir/src/msf_distort/PoseDistorter.cc.o[0m
[ 10%] [32m[1mLinking CXX shared library /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/libpose_distorter.so[0m
[ 10%] Built target pose_distorter
[35m[1mScanning dependencies of target msf_updates_gencfg[0m
[ 15%] [34m[1mGenerating dynamic reconfigure files from cfg/PosePressureSensor.cfg: /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/PosePressureSensorConfig.h /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/python2.7/dist-packages/msf_updates/cfg/PosePressureSensorConfig.py[0m
Generating reconfiguration files for PosePressureSensor in msf_updates
Wrote header file in /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/PosePressureSensorConfig.h
[ 21%] [34m[1mGenerating dynamic reconfigure files from cfg/PositionPoseSensor.cfg: /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/PositionPoseSensorConfig.h /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/python2.7/dist-packages/msf_updates/cfg/PositionPoseSensorConfig.py[0m
Generating reconfiguration files for PositionPoseSensor in msf_updates
Wrote header file in /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/PositionPoseSensorConfig.h
[ 26%] [34m[1mGenerating dynamic reconfigure files from cfg/SinglePoseSensor.cfg: /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/SinglePoseSensorConfig.h /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/python2.7/dist-packages/msf_updates/cfg/SinglePoseSensorConfig.py[0m
Generating reconfiguration files for SinglePoseSensor in msf_updates
Wrote header file in /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/SinglePoseSensorConfig.h
[ 31%] [34m[1mGenerating dynamic reconfigure files from cfg/SinglePositionSensor.cfg: /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/SinglePositionSensorConfig.h /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/python2.7/dist-packages/msf_updates/cfg/SinglePositionSensorConfig.py[0m
Generating reconfiguration files for SinglePositionSensor in msf_updates
Wrote header file in /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/SinglePositionSensorConfig.h
[ 36%] [34m[1mGenerating dynamic reconfigure files from cfg/SphericalPositionSensor.cfg: /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/SphericalPositionSensorConfig.h /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/python2.7/dist-packages/msf_updates/cfg/SphericalPositionSensorConfig.py[0m
Generating reconfiguration files for SphericalPositionSensor in msf_updates
Wrote header file in /home/radu/tiltUp3_ws/devel/.private/msf_updates/include/msf_updates/SphericalPositionSensorConfig.h
[ 36%] Built target msf_updates_gencfg
[35m[1mScanning dependencies of target test_distort[0m
[ 42%] [32mBuilding CXX object CMakeFiles/test_distort.dir/src/test/test_distort.cc.o[0m
[ 47%] [32m[1mLinking CXX executable /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/msf_updates/test_distort[0m
[ 47%] Built target test_distort
[35m[1mScanning dependencies of target pose_sensor[0m
[ 52%] [32mBuilding CXX object src/pose_msf/CMakeFiles/pose_sensor.dir/main.cpp.o[0m
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:22[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_msf/main.cpp:19[m[K:
/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of â€˜[01m[Kmsf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:174:80:[m[K   required from â€˜[01m[Kmsf_core::MSF_InitMeasurement<EKFState_T>::MSF_InitMeasurement(bool) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:213:66:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kmsf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition> >::mah_threshold_[m[Kâ€™ will be initialized after [-Wreorder]
   double mah_threshold_;
[01;32m[K          ^[m[K
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10:[m[K [01;35m[Kwarning: [m[K  â€˜[01m[Kdouble msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition> >::time[m[Kâ€™ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
[01;32m[K          ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:22[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_msf/main.cpp:19[m[K:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1:[m[K [01;35m[Kwarning: [m[K  when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
[01;32m[K ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:25:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_state.h:347[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:42[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:22[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_msf/main.cpp:19[m[K:
/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h: In instantiation of â€˜[01m[Kstd::__cxx11::string* google::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:359:3:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::GetPoseCovariance(geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type = boost::array<double, 36ul>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:120:20:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::ToPoseMsg(geometry_msgs::PoseWithCovarianceStamped&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovarianceStamped = geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void> >][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:210:7:[m[K   required from â€˜[01m[Kvoid msf_core::MSF_SensorManagerROS<EKFState_T>::PublishStateAfterPropagation(const boost::shared_ptr<X>&) const [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_msf/main.cpp:29:1:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:32:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K                                ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:148:53:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KGOOGLE_PREDICT_TRUE[m[Kâ€™
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
[01;32m[K                                                     ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:1:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KDEFINE_CHECK_OP_IMPL[m[Kâ€™
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K ^[m[K
[ 57%] [32m[1mLinking CXX executable /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/msf_updates/pose_sensor[0m
[ 57%] Built target pose_sensor
[35m[1mScanning dependencies of target pose_pressure_sensor[0m
[ 63%] [32mBuilding CXX object src/pose_pressure_msf/CMakeFiles/pose_pressure_sensor.dir/main.cpp.o[0m
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_sensormanager_inl.h:21[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanager.h:149[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:35[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/pose_pressure_sensormanager.h:21[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/main.cpp:17[m[K:
/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of â€˜[01m[Kmsf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 10> >, msf_updates::StateDefinition>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:130:54:[m[K   required from â€˜[01m[Kmsf_core::MSF_Measurement<T, RMAT_T, EKFState_T>::MSF_Measurement(bool, int, bool, double) [with T = geometry_msgs::PointStamped_<std::allocator<void> >; RMAT_T = Eigen::Matrix<double, 1, 1, 0, 1, 1>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 10> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/include/msf_updates/pressure_sensor_handler/pressure_measurement.h:66:19:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kmsf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 10> >, msf_updates::StateDefinition> >::mah_threshold_[m[Kâ€™ will be initialized after [-Wreorder]
   double mah_threshold_;
[01;32m[K          ^[m[K
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10:[m[K [01;35m[Kwarning: [m[K  â€˜[01m[Kdouble msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 10> >, msf_updates::StateDefinition> >::time[m[Kâ€™ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
[01;32m[K          ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_sensormanager_inl.h:21[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanager.h:149[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:35[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/pose_pressure_sensormanager.h:21[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/main.cpp:17[m[K:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1:[m[K [01;35m[Kwarning: [m[K  when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
[01;32m[K ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:25:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_state.h:347[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:42[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_sensormanager_inl.h:21[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanager.h:149[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:35[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/pose_pressure_sensormanager.h:21[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/main.cpp:17[m[K:
/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h: In instantiation of â€˜[01m[Kstd::__cxx11::string* google::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:359:3:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::GetPoseCovariance(geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 10> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type = boost::array<double, 36ul>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:120:20:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::ToPoseMsg(geometry_msgs::PoseWithCovarianceStamped&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 10> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovarianceStamped = geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void> >][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:210:7:[m[K   required from â€˜[01m[Kvoid msf_core::MSF_SensorManagerROS<EKFState_T>::PublishStateAfterPropagation(const boost::shared_ptr<X>&) const [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 10> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/main.cpp:27:1:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:32:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K                                ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:148:53:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KGOOGLE_PREDICT_TRUE[m[Kâ€™
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
[01;32m[K                                                     ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:1:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KDEFINE_CHECK_OP_IMPL[m[Kâ€™
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K ^[m[K
[ 68%] [32m[1mLinking CXX executable /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/msf_updates/pose_pressure_sensor[0m
[ 68%] Built target pose_pressure_sensor
[35m[1mScanning dependencies of target position_sensor[0m
[ 73%] [32mBuilding CXX object src/position_msf/CMakeFiles/position_sensor.dir/main.cpp.o[0m
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_msf/position_sensormanager.h:24[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_msf/main.cpp:19[m[K:
/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of â€˜[01m[Kmsf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:130:54:[m[K   required from â€˜[01m[Kmsf_core::MSF_Measurement<T, RMAT_T, EKFState_T>::MSF_Measurement(bool, int, bool, double) [with T = sensor_fusion_comm::PointWithCovarianceStamped_<std::allocator<void> >; RMAT_T = Eigen::Matrix<double, 3, 3>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/include/msf_updates/position_sensor_handler/position_measurement.h:95:33:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kmsf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition> >::mah_threshold_[m[Kâ€™ will be initialized after [-Wreorder]
   double mah_threshold_;
[01;32m[K          ^[m[K
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10:[m[K [01;35m[Kwarning: [m[K  â€˜[01m[Kdouble msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition> >::time[m[Kâ€™ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
[01;32m[K          ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_msf/position_sensormanager.h:24[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_msf/main.cpp:19[m[K:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1:[m[K [01;35m[Kwarning: [m[K  when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
[01;32m[K ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:25:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_state.h:347[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:42[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_msf/position_sensormanager.h:24[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_msf/main.cpp:19[m[K:
/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h: In instantiation of â€˜[01m[Kstd::__cxx11::string* google::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:359:3:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::GetPoseCovariance(geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type = boost::array<double, 36ul>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:120:20:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::ToPoseMsg(geometry_msgs::PoseWithCovarianceStamped&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovarianceStamped = geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void> >][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:210:7:[m[K   required from â€˜[01m[Kvoid msf_core::MSF_SensorManagerROS<EKFState_T>::PublishStateAfterPropagation(const boost::shared_ptr<X>&) const [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_msf/main.cpp:29:1:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:32:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K                                ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:148:53:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KGOOGLE_PREDICT_TRUE[m[Kâ€™
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
[01;32m[K                                                     ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:1:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KDEFINE_CHECK_OP_IMPL[m[Kâ€™
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K ^[m[K
[ 78%] [32m[1mLinking CXX executable /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/msf_updates/position_sensor[0m
[ 78%] Built target position_sensor
[35m[1mScanning dependencies of target position_pose_sensor[0m
[ 84%] [32mBuilding CXX object src/position_pose_msf/CMakeFiles/position_pose_sensor.dir/main.cpp.o[0m
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_pose_msf/position_pose_sensormanager.h:22[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_pose_msf/main.cpp:17[m[K:
/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of â€˜[01m[Kmsf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:130:54:[m[K   required from â€˜[01m[Kmsf_core::MSF_Measurement<T, RMAT_T, EKFState_T>::MSF_Measurement(bool, int, bool, double) [with T = sensor_fusion_comm::PointWithCovarianceStamped_<std::allocator<void> >; RMAT_T = Eigen::Matrix<double, 3, 3>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/include/msf_updates/position_sensor_handler/position_measurement.h:95:33:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kmsf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition> >::mah_threshold_[m[Kâ€™ will be initialized after [-Wreorder]
   double mah_threshold_;
[01;32m[K          ^[m[K
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10:[m[K [01;35m[Kwarning: [m[K  â€˜[01m[Kdouble msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition> >::time[m[Kâ€™ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
[01;32m[K          ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_pose_msf/position_pose_sensormanager.h:22[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_pose_msf/main.cpp:17[m[K:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1:[m[K [01;35m[Kwarning: [m[K  when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
[01;32m[K ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:25:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_state.h:347[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:42[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_pose_msf/position_pose_sensormanager.h:22[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_pose_msf/main.cpp:17[m[K:
/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h: In instantiation of â€˜[01m[Kstd::__cxx11::string* google::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:359:3:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::GetPoseCovariance(geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type = boost::array<double, 36ul>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:120:20:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::ToPoseMsg(geometry_msgs::PoseWithCovarianceStamped&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovarianceStamped = geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void> >][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:210:7:[m[K   required from â€˜[01m[Kvoid msf_core::MSF_SensorManagerROS<EKFState_T>::PublishStateAfterPropagation(const boost::shared_ptr<X>&) const [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1, 0, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/position_pose_msf/main.cpp:27:1:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:32:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K                                ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:148:53:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KGOOGLE_PREDICT_TRUE[m[Kâ€™
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
[01;32m[K                                                     ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:1:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KDEFINE_CHECK_OP_IMPL[m[Kâ€™
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K ^[m[K
[ 89%] [32m[1mLinking CXX executable /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/msf_updates/position_pose_sensor[0m
[ 89%] Built target position_pose_sensor
[35m[1mScanning dependencies of target spherical_position_sensor[0m
[ 94%] [32mBuilding CXX object src/spherical_msf/CMakeFiles/spherical_position_sensor.dir/main.cpp.o[0m
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/spherical_msf/./spherical_sensormanager.h:22[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/spherical_msf/main.cpp:17[m[K:
/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of â€˜[01m[Kmsf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:130:54:[m[K   required from â€˜[01m[Kmsf_core::MSF_Measurement<T, RMAT_T, EKFState_T>::MSF_Measurement(bool, int, bool, double) [with T = geometry_msgs::PointStamped_<std::allocator<void> >; RMAT_T = Eigen::Matrix<double, 2, 2>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/include/msf_updates/spherical_position_sensor/spherical_measurement.h:91:33:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kmsf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition> >::mah_threshold_[m[Kâ€™ will be initialized after [-Wreorder]
   double mah_threshold_;
[01;32m[K          ^[m[K
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10:[m[K [01;35m[Kwarning: [m[K  â€˜[01m[Kdouble msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition> >::time[m[Kâ€™ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
[01;32m[K          ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/spherical_msf/./spherical_sensormanager.h:22[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/spherical_msf/main.cpp:17[m[K:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1:[m[K [01;35m[Kwarning: [m[K  when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
[01;32m[K ^[m[K
In file included from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:25:0[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_state.h:347[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:42[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/spherical_msf/./spherical_sensormanager.h:22[m[K,
                 from [01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/spherical_msf/main.cpp:17[m[K:
/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h: In instantiation of â€˜[01m[Kstd::__cxx11::string* google::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::__cxx11::string = std::__cxx11::basic_string<char>][m[Kâ€™:
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:359:3:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::GetPoseCovariance(geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovariance_<std::allocator<void> >::_covariance_type = boost::array<double, 36ul>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_state_inl.h:120:20:[m[K   required from â€˜[01m[Kvoid msf_core::GenericState_T<StateVector_T, StateDefinition_T>::ToPoseMsg(geometry_msgs::PoseWithCovarianceStamped&) [with StateSeq_T = boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >; StateDef_T = msf_updates::StateDefinition; geometry_msgs::PoseWithCovarianceStamped = geometry_msgs::PoseWithCovarianceStamped_<std::allocator<void> >][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:210:7:[m[K   required from â€˜[01m[Kvoid msf_core::MSF_SensorManagerROS<EKFState_T>::PublishStateAfterPropagation(const boost::shared_ptr<X>&) const [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>][m[Kâ€™
[01m[K/home/radu/tiltUp3_ws/src/ethzasl_msf/msf_updates/src/spherical_msf/main.cpp:26:1:[m[K   required from here
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:32:[m[K [01;35m[Kwarning: [m[Kcomparison between signed and unsigned integer expressions [-Wsign-compare]
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K                                ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:148:53:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KGOOGLE_PREDICT_TRUE[m[Kâ€™
 #define GOOGLE_PREDICT_TRUE(x) (__builtin_expect(!!(x), 1))
[01;32m[K                                                     ^[m[K
[01m[K/home/radu/tiltUp3_ws/devel/.private/glog_catkin/include/glog/logging.h:717:1:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KDEFINE_CHECK_OP_IMPL[m[Kâ€™
 DEFINE_CHECK_OP_IMPL(Check_EQ, ==)  // Compilation error with CHECK_EQ(NULL, x)?
[01;32m[K ^[m[K
[100%] [32m[1mLinking CXX executable /home/radu/tiltUp3_ws/devel/.private/msf_updates/lib/msf_updates/spherical_position_sensor[0m
[100%] Built target spherical_position_sensor
